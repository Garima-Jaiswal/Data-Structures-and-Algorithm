mplement the myAtoi(string s) function, which converts a string to a 32-bit signed integer.

The algorithm for myAtoi(string s) is as follows:

Whitespace: Ignore any leading whitespace (" ").
Signedness: Determine the sign by checking if the next character is '-' or '+', assuming positivity is neither present.
Conversion: Read the integer by skipping leading zeros until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.
Rounding: If the integer is out of the 32-bit signed integer range [-231, 231 - 1], then round the integer to remain in the range. Specifically, integers less than -231 should be rounded to -231, and integers greater than 231 - 1 should be rounded to 231 - 1.
Return the integer as the final result.


class Solution {
    public String capitalizeTitle(String title) {
        String[] sb=title.split(" ");
        String result="";

        for(int i=0;i<sb.length;i++){
            String g=sb[i];
            if(g.length()<3)
                result+=g.toLowerCase();
            else{
                result+=String.valueOf(g.charAt(0)>='a' && g.charAt(0)<='z'?(char)(g.charAt(0)-32):g.charAt(0));
                result+=g.subSequence(1, g.length()).toString().toLowerCase();
            }
            if(i<sb.length-1)
                result+=" ";
                

        }
        return result;
       
    }
}
