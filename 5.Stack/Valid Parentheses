Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack= new Stack<>();
        for(int i=0;i<s.length();i++){
            char ch= s.charAt(i);
            if(ch== '(' || ch== '[' || ch== '{'){
                stack.push(ch);
            }
            else if(!stack.isEmpty() && ch== ')' && stack.peek()=='('){
                stack.pop();
            }
            else if(!stack.isEmpty() && ch== ']' && stack.peek()=='['){
                stack.pop();
            }
            else if(!stack.isEmpty() && ch== '}' && stack.peek()=='{'){
                stack.pop();
            }
            else{
                return false;
            }
        }
        return stack.isEmpty();
        
    }
}
